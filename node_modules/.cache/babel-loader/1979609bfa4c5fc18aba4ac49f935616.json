{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/src/pages/Badges.js\";\nimport React from 'react';\nimport './styles/Badges.css';\nimport logo from '../images/output-onlinepngtools.png';\nimport BadgesList from '../components/BadgesList.js';\nimport PageLoading from '../components/PageLoading.js';\nimport PageError from '../components/PageError.js';\nimport { Link } from 'react-router-dom';\nimport api from '../api.js';\n\nvar badges =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(badges, _React$Component);\n\n  function badges() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, badges);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(badges)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      error: null,\n      data: undefined\n    };\n    _this.fetchData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //aca declaramos el metodo del componendtDidMount\n              // el fetch data comienza con loadin: true y cancela el error\n              _this.setState({\n                loading: true,\n                error: null\n              }); //declaramos esto aca porque puede que en un futuro mandemos a llamar fetchData\n\n\n              _context.prev = 1;\n              _context.next = 4;\n              return api.badges.list();\n\n            case 4:\n              data = _context.sent;\n\n              //LA LLAMADA A ESTA API es asincrona!! asi que debemos utilizar  un async /await \n              _this.setState({\n                loading: false,\n                data: data\n              }); //aca si SI! obtenemos los datos los guardamos y en caso de obtenerlos suspendemos el loading\n\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n\n              _this.setState({\n                loading: false,\n                error: _context.t0\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n    return _this;\n  }\n\n  _createClass(badges, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //la mejor forma de trabajar una Api es con componentDidMount() Documentacion aca: https://es.reactjs.org/docs/react-component.html#componentwillunmount\n      //ESTO COMIENZA LA PETICION\n      this.fetchData(); //esto debe ir en el componente! este fetchData es un metodo del componente osea una accion a realizar\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading === true) {\n        return React.createElement(PageLoading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.error) {\n        return React.createElement(PageError, {\n          error: this.state.error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges__hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"Badges_conf-logo\",\n        src: logo,\n        alt: \"Conf Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"Badges__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges__buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/badges/new\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"New Badge\")), React.createElement(\"div\", {\n        className: \"Badges__list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(BadgesList, {\n        Badges: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return badges;\n}(React.Component);\n\nexport default badges; // ESTE ES EL EJEMPLO MPARA SIMULAR TRAER DATOS DE API\n//   //hay un orden en estos metodos, el constructor ocurre primero #1\n//   //este constructor debe llevar props para poder inicializar la super clase\n//   constructor(props) {\n//     super(props);\n//     console.log('1. constructor()');\n// //aca para llamar state debemos incluir el THIS!!\n//     this.state = {\n//       data: [],\n//     };\n//   }\n//   componentDidMount() {\n//     console.log('3. componentDidMount()');\n//     this.timeoutId = setTimeout(() => {\n//       this.setState({\n//         data: [\n//           {\n//             id: '2de30c42-9deb-40fc-a41f-05e62b5939a7',\n//             firstName: 'Freda',\n//             lastName: 'Grady',\n//             email: 'Leann_Berge@gmail.com',\n//             jobTitle: 'Legacy Brand Director',\n//             twitter: 'FredaGrady22221-7573',\n//             avatarUrl:\n//               'https://www.gravatar.com/avatar/f63a9c45aca0e7e7de0782a6b1dff40b?d=identicon',\n//           },\n//           {\n//             id: 'd00d3614-101a-44ca-b6c2-0be075aeed3d',\n//             firstName: 'Major',\n//             lastName: 'Rodriguez',\n//             email: 'Ilene66@hotmail.com',\n//             jobTitle: 'Human Research Architect',\n//             twitter: 'MajorRodriguez61545',\n//             avatarUrl:\n//               'https://www.gravatar.com/avatar/d57a8be8cb9219609905da25d5f3e50a?d=identicon',\n//           },\n//           {\n//             id: '63c03386-33a2-4512-9ac1-354ad7bec5e9',\n//             firstName: 'Daphney',\n//             lastName: 'Torphy',\n//             email: 'Ron61@hotmail.com',\n//             jobTitle: 'National Markets Officer',\n//             twitter: 'DaphneyTorphy96105',\n//             avatarUrl:\n//               'https://www.gravatar.com/avatar/e74e87d40e55b9ff9791c78892e55cb7?d=identicon',\n//           },\n//         ],\n//       });\n//     }, 3000);\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     console.log('5. componentDidUpdate()');\n//     console.log({\n//       prevProps: prevProps,\n//       prevState: prevState,\n//     });\n//     console.log({\n//       props: this.props,\n//       state: this.state,\n//     });\n//   }\n// //este componentWillUnmount() es el tercero en ejecutarse\n//   componentWillUnmount() { //Este m√©todo es llamado cuando un componente se elimina del DOM:\n//     console.log('3. componentWillUnmount');\n//     clearTimeout(this.timeoutId); //el componente se desmonta si no se ejecuta, aca lo hacemos si se le pasa un ID que ya expiro \n//     //asi no tenemos error en consola si cuando ejecutamos el metodo no se cumple \n//   }\n// //el render es el segundo en ejecutarse \n//     render() {\n//       console.log('2/4 render ');","map":{"version":3,"sources":["/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/src/pages/Badges.js"],"names":["React","logo","BadgesList","PageLoading","PageError","Link","api","badges","state","loading","error","data","undefined","fetchData","setState","list","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './styles/Badges.css'\nimport logo from '../images/output-onlinepngtools.png';\nimport BadgesList from '../components/BadgesList.js';\nimport PageLoading from '../components/PageLoading.js';\nimport PageError from '../components/PageError.js';\n\nimport {Link} from 'react-router-dom';\nimport api from '../api.js';\n\n\nclass badges extends React.Component {\n  state = {\n    loading: true,\n    error: null,\n    data: undefined\n  }\n\n  componentDidMount() { //la mejor forma de trabajar una Api es con componentDidMount() Documentacion aca: https://es.reactjs.org/docs/react-component.html#componentwillunmount\n    //ESTO COMIENZA LA PETICION\n    this.fetchData(); //esto debe ir en el componente! este fetchData es un metodo del componente osea una accion a realizar\n  }\n\n  fetchData = async () => { //aca declaramos el metodo del componendtDidMount\n    // el fetch data comienza con loadin: true y cancela el error\n    this.setState({ loading: true, error: null }); //declaramos esto aca porque puede que en un futuro mandemos a llamar fetchData\n\n    try { //con esto comenzamos la llamada ala API {preparamos el entorno para la llamada}\n      const data = await api.badges.list(); //LA LLAMADA A ESTA API es asincrona!! asi que debemos utilizar  un async /await \n      this.setState({ loading: false, data: data }); //aca si SI! obtenemos los datos los guardamos y en caso de obtenerlos suspendemos el loading\n    } catch (error) {\n      this.setState({ loading: false, error: error });\n    }\n  };\n\n\n  render() {\n    if (this.state.loading === true) {\n      return <PageLoading />;\n    }\n\n    if (this.state.error) {\n      return <PageError error={this.state.error} />;\n    }\n\n    return (\n          <React.Fragment>\n            \n             {/* <Navbar/> esto ya se esta compartiendo desde el archivo layout */}\n            <div className=\"Badges\">\n              <div className=\"Badges__hero\">\n                <div className=\"Badges__container\">\n                  <img\n                    className=\"Badges_conf-logo\"\n                    src={logo}\n                    alt=\"Conf Logo\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"Badges__container\">\n                    <div  className=\"Badges__buttons\">\n                    <Link to=\"/badges/new\" className=\"btn btn-primary\">\n                      New Badge\n                    </Link>\n                    </div>\n\n                    <div className=\"Badges__list\">\n                        <div className=\"Badges__container\">\n                        <BadgesList Badges={this.state.data}/>\n                        </div>\n                   </div>\n            </div>\n            </React.Fragment>\n         )\n    }\n}\n\nexport default badges;\n\n\n\n\n// ESTE ES EL EJEMPLO MPARA SIMULAR TRAER DATOS DE API\n//   //hay un orden en estos metodos, el constructor ocurre primero #1\n//   //este constructor debe llevar props para poder inicializar la super clase\n//   constructor(props) {\n//     super(props);\n//     console.log('1. constructor()');\n// //aca para llamar state debemos incluir el THIS!!\n//     this.state = {\n//       data: [],\n//     };\n//   }\n\n//   componentDidMount() {\n//     console.log('3. componentDidMount()');\n\n//     this.timeoutId = setTimeout(() => {\n//       this.setState({\n//         data: [\n//           {\n//             id: '2de30c42-9deb-40fc-a41f-05e62b5939a7',\n//             firstName: 'Freda',\n//             lastName: 'Grady',\n//             email: 'Leann_Berge@gmail.com',\n//             jobTitle: 'Legacy Brand Director',\n//             twitter: 'FredaGrady22221-7573',\n//             avatarUrl:\n//               'https://www.gravatar.com/avatar/f63a9c45aca0e7e7de0782a6b1dff40b?d=identicon',\n//           },\n//           {\n//             id: 'd00d3614-101a-44ca-b6c2-0be075aeed3d',\n//             firstName: 'Major',\n//             lastName: 'Rodriguez',\n//             email: 'Ilene66@hotmail.com',\n//             jobTitle: 'Human Research Architect',\n//             twitter: 'MajorRodriguez61545',\n//             avatarUrl:\n//               'https://www.gravatar.com/avatar/d57a8be8cb9219609905da25d5f3e50a?d=identicon',\n//           },\n//           {\n//             id: '63c03386-33a2-4512-9ac1-354ad7bec5e9',\n//             firstName: 'Daphney',\n//             lastName: 'Torphy',\n//             email: 'Ron61@hotmail.com',\n//             jobTitle: 'National Markets Officer',\n//             twitter: 'DaphneyTorphy96105',\n//             avatarUrl:\n//               'https://www.gravatar.com/avatar/e74e87d40e55b9ff9791c78892e55cb7?d=identicon',\n//           },\n//         ],\n//       });\n//     }, 3000);\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     console.log('5. componentDidUpdate()');\n//     console.log({\n//       prevProps: prevProps,\n//       prevState: prevState,\n//     });\n\n//     console.log({\n//       props: this.props,\n//       state: this.state,\n//     });\n//   }\n// //este componentWillUnmount() es el tercero en ejecutarse\n//   componentWillUnmount() { //Este m√©todo es llamado cuando un componente se elimina del DOM:\n//     console.log('3. componentWillUnmount');\n//     clearTimeout(this.timeoutId); //el componente se desmonta si no se ejecuta, aca lo hacemos si se le pasa un ID que ya expiro \n//     //asi no tenemos error en consola si cuando ejecutamos el metodo no se cumple \n//   }\n\n// //el render es el segundo en ejecutarse \n//     render() {\n//       console.log('2/4 render ');\n      "]},"metadata":{},"sourceType":"module"}