{"ast":null,"code":"import _classCallCheck from \"/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/src/components/BadgeForm.js\";\nimport React from 'react';\n\nvar badgeForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(badgeForm, _React$Component);\n\n  function badgeForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, badgeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(badgeForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.handleClick = function (e) {\n      //manejador del evento al escribir, este metodo recibe el evento  \n      console.log(\"Button was clicked\");\n    };\n\n    _this.handleSubmit = function (e) {\n      //manejador de evento al hacer click, Los elementos button también tienen un evento que es onClick.\n      e.preventDefault();\n      console.log(\"form was submitted\");\n      console.log(_this.state); //con esto imprimimos todo el estado (la info)\n    };\n\n    return _this;\n  }\n\n  _createClass(badgeForm, [{\n    key: \"render\",\n    //Cuando hay un botón dentro de un formulario, este automáticamente será de \n    //tipo submit. Si no queremos que pase así hay dos maneras de evitarlo: especificando que su valor es de tipo button o manejándolo \n    //desde el formulario cuando ocurre el evento onSubmit.\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"New Attendant\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"input\", {\n        onChange: this.props.onChange,\n        className: \"form-control\",\n        type: \"text\",\n        name: \"fisrtName\",\n        value: this.state.firstName //esto es para leer el estado y controlar la info, en este caso this.state.firstName leemos el first name \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(\"input\", {\n        onChange: this.props.onChange,\n        className: \"form-control\",\n        type: \"text\",\n        name: \"LasttName\",\n        value: this.state.LastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        onChange: this.props.onChange,\n        className: \"form-control\",\n        type: \"text\",\n        name: \"Email\",\n        value: this.state.Email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Job Title\"), React.createElement(\"input\", {\n        onChange: this.props.onChange,\n        className: \"form-control\",\n        type: \"text\",\n        name: \"JobTitle\",\n        value: this.state.JobTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Twitter\"), React.createElement(\"input\", {\n        onChange: this.props.onChange,\n        className: \"form-control\",\n        type: \"text\",\n        name: \"Tweeter\",\n        value: this.state.Tweeter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.handleClick,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return badgeForm;\n}(React.Component);\n\nexport default badgeForm;","map":{"version":3,"sources":["/Users/hydra/Documents/GitHub/ReactJS-Project/platzi-badges/src/components/BadgeForm.js"],"names":["React","badgeForm","state","handleClick","e","console","log","handleSubmit","preventDefault","props","onChange","firstName","LastName","Email","JobTitle","Tweeter","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass badgeForm extends React.Component {\n    state = {} //con este estado vacio podemos ver. LA INFORMACION SE QUEDA ACA Y QUEREMOS COMPARTIRLA\n    handleClick = e => { //manejador del evento al escribir, este metodo recibe el evento  \n        console.log(\"Button was clicked\");\n       };\n//este simbolo {e} es un veneto sintetico abajo en el metodo\n       handleSubmit = e => { //manejador de evento al hacer click, Los elementos button también tienen un evento que es onClick.\n        e.preventDefault();\n        console.log(\"form was submitted\");\n        console.log(this.state); //con esto imprimimos todo el estado (la info)\n        };\n//Cuando hay un botón dentro de un formulario, este automáticamente será de \n//tipo submit. Si no queremos que pase así hay dos maneras de evitarlo: especificando que su valor es de tipo button o manejándolo \n//desde el formulario cuando ocurre el evento onSubmit.\n    render(){\n        return (\n            <div>\n                <h1>New Attendant</h1>\n                <form onSubmit={this.handleSubmit}> {/* con esto todos los imput ahora van a usuar el prop onchange */}\n                    <div className=\"form-group\">\n        <label>First Name</label>\n        <input \n        onChange={this.props.onChange}\n         className=\"form-control\" \n         type=\"text\"\n         name=\"fisrtName\"\n         value={this.state.firstName} //esto es para leer el estado y controlar la info, en este caso this.state.firstName leemos el first name \n         />\n                </div>\n\n                    <div className=\"form-group\">\n        <label>Last Name</label>\n        <input \n        onChange={this.props.onChange} \n        className=\"form-control\" \n        type=\"text\" \n        name=\"LasttName\"\n        value={this.state.LastName}\n        />\n                    </div>\n                    <div className=\"form-group\">\n        <label>Email</label>\n        <input \n        onChange={this.props.onChange} \n        className=\"form-control\" \n        type=\"text\" \n        name=\"Email\"\n        value={this.state.Email}\n        />\n                    </div>\n                    <div className=\"form-group\">\n        <label>Job Title</label>\n        <input \n        onChange={this.props.onChange} \n        className=\"form-control\" \n        type=\"text\" \n        name=\"JobTitle\"\n        value={this.state.JobTitle}\n        />\n                    </div>\n                    <div className=\"form-group\">\n        <label>Twitter</label>\n        <input \n        onChange={this.props.onChange} \n        className=\"form-control\" \n        type=\"text\" \n        name=\"Tweeter\"\n        value={this.state.Tweeter}\n        />\n                    </div>\n            <button onClick={this.handleClick} className= \"btn btn-primary\">Save</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default badgeForm;\n\n"]},"metadata":{},"sourceType":"module"}