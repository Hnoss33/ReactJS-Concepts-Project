{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hydra/Documents/GitHub/ReactJS-Project/React_badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/hydra/Documents/GitHub/ReactJS-Project/React_badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/hydra/Documents/GitHub/ReactJS-Project/React_badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hydra/Documents/GitHub/ReactJS-Project/React_badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/hydra/Documents/GitHub/ReactJS-Project/React_badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/hydra/Documents/GitHub/ReactJS-Project/React_badges/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/hydra/Documents/GitHub/ReactJS-Project/React_badges/src/pages/BadgeDetailsContainer.js\";\nimport React from 'react';\nimport BadgeDetails from './BadgeDetails';\nimport PageLoading from '../components/PageLoading';\nimport PageError from '../components/PageError';\nimport api from '../api';\n\nvar BadgeDetailsContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(BadgeDetailsContainer, _React$Component);\n\n  var _super = _createSuper(BadgeDetailsContainer);\n\n  function BadgeDetailsContainer() {\n    var _this;\n\n    _classCallCheck(this, BadgeDetailsContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      loading: true,\n      error: null,\n      data: undefined,\n      modalIsOpen: false\n    };\n    _this.fetchData = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                error: null\n              });\n\n              _context.prev = 1;\n              _context.next = 4;\n              return api.badges.read(_this.props.match.params.badgeId);\n\n            case 4:\n              data = _context.sent;\n\n              _this.setState({\n                loading: false,\n                data: data\n              });\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n\n              _this.setState({\n                loading: false,\n                error: _context.t0\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    _this.handleOpenModal = function (e) {\n      _this.setState({\n        modalIsOpen: true\n      });\n    };\n\n    _this.handleCloseModal = function (e) {\n      _this.setState({\n        modalIsOpen: false\n      });\n    };\n\n    _this.handleDeleteBadge = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.setState({\n                  loading: true,\n                  error: null\n                });\n\n                _context2.prev = 1;\n                _context2.next = 4;\n                return api.badges.remove(_this.props.match.params.badgeId);\n\n              case 4:\n                _this.setState({\n                  loading: false\n                });\n\n                _this.props.history.push('/badges');\n\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n\n                _this.setState({\n                  loading: false,\n                  error: _context2.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(BadgeDetailsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return /*#__PURE__*/React.createElement(PageLoading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 14\n          }\n        });\n      }\n\n      if (this.state.error) {\n        return /*#__PURE__*/React.createElement(PageError, {\n          error: this.state.error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(BadgeDetails, {\n        onCloseModal: this.handleCloseModal,\n        onOpenModal: this.handleOpenModal,\n        modalIsOpen: this.state.modalIsOpen,\n        onDeleteBadge: this.handleDeleteBadge,\n        badge: this.state.data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return BadgeDetailsContainer;\n}(React.Component);\n\nexport default BadgeDetailsContainer;","map":{"version":3,"sources":["/Users/hydra/Documents/GitHub/ReactJS-Project/React_badges/src/pages/BadgeDetailsContainer.js"],"names":["React","BadgeDetails","PageLoading","PageError","api","BadgeDetailsContainer","state","loading","error","data","undefined","modalIsOpen","fetchData","setState","badges","read","props","match","params","badgeId","handleOpenModal","e","handleCloseModal","handleDeleteBadge","remove","history","push","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,QAAhB;;IAEMC,qB;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,KAAK,EAAE,IAFD;AAGNC,MAAAA,IAAI,EAAEC,SAHA;AAINC,MAAAA,WAAW,EAAE;AAJP,K;UAWRC,S,yEAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACV,oBAAKC,QAAL,CAAc;AAAEN,gBAAAA,OAAO,EAAE,IAAX;AAAiBC,gBAAAA,KAAK,EAAE;AAAxB,eAAd;;AADU;AAAA;AAAA,qBAIWJ,GAAG,CAACU,MAAJ,CAAWC,IAAX,CAAgB,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAAxC,CAJX;;AAAA;AAIFV,cAAAA,IAJE;;AAKR,oBAAKI,QAAL,CAAc;AAAEN,gBAAAA,OAAO,EAAE,KAAX;AAAkBE,gBAAAA,IAAI,EAAEA;AAAxB,eAAd;;AALQ;AAAA;;AAAA;AAAA;AAAA;;AAOR,oBAAKI,QAAL,CAAc;AAAEN,gBAAAA,OAAO,EAAE,KAAX;AAAkBC,gBAAAA,KAAK;AAAvB,eAAd;;AAPQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAWZY,e,GAAkB,UAAAC,CAAC,EAAI;AACrB,YAAKR,QAAL,CAAc;AAAEF,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,K;;UAEDW,gB,GAAmB,UAAAD,CAAC,EAAI;AACtB,YAAKR,QAAL,CAAc;AAAEF,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,K;;UAEDY,iB;2EAAoB,kBAAMF,CAAN;AAAA;AAAA;AAAA;AAAA;AAClB,sBAAKR,QAAL,CAAc;AAAEN,kBAAAA,OAAO,EAAE,IAAX;AAAiBC,kBAAAA,KAAK,EAAE;AAAxB,iBAAd;;AADkB;AAAA;AAAA,uBAIVJ,GAAG,CAACU,MAAJ,CAAWU,MAAX,CAAkB,MAAKR,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAA1C,CAJU;;AAAA;AAKhB,sBAAKN,QAAL,CAAc;AAAEN,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AAEA,sBAAKS,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;;AAPgB;AAAA;;AAAA;AAAA;AAAA;;AAShB,sBAAKb,QAAL,CAAc;AAAEN,kBAAAA,OAAO,EAAE,KAAX;AAAkBC,kBAAAA,KAAK;AAAvB,iBAAd;;AATgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;wCAvBA;AAClB,WAAKI,SAAL;AACD;;;6BAkCQ;AACP,UAAI,KAAKN,KAAL,CAAWC,OAAf,EAAwB;AACtB,4BAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,UAAI,KAAKD,KAAL,CAAWE,KAAf,EAAsB;AACpB,4BAAO,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,0BACE,oBAAC,YAAD;AACE,QAAA,YAAY,EAAE,KAAKc,gBADrB;AAEE,QAAA,WAAW,EAAE,KAAKF,eAFpB;AAGE,QAAA,WAAW,EAAE,KAAKd,KAAL,CAAWK,WAH1B;AAIE,QAAA,aAAa,EAAE,KAAKY,iBAJtB;AAKE,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWG,IALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD;;;;EA9DiCT,KAAK,CAAC2B,S;;AAiE1C,eAAetB,qBAAf","sourcesContent":["import React from 'react';\n\nimport BadgeDetails from './BadgeDetails';\nimport PageLoading from '../components/PageLoading';\nimport PageError from '../components/PageError';\nimport api from '../api';\n\nclass BadgeDetailsContainer extends React.Component {\n  state = {\n    loading: true,\n    error: null,\n    data: undefined,\n    modalIsOpen: false,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    this.setState({ loading: true, error: null });\n\n    try {\n      const data = await api.badges.read(this.props.match.params.badgeId);\n      this.setState({ loading: false, data: data });\n    } catch (error) {\n      this.setState({ loading: false, error: error });\n    }\n  };\n\n  handleOpenModal = e => {\n    this.setState({ modalIsOpen: true });\n  };\n\n  handleCloseModal = e => {\n    this.setState({ modalIsOpen: false });\n  };\n\n  handleDeleteBadge = async e => {\n    this.setState({ loading: true, error: null });\n\n    try {\n      await api.badges.remove(this.props.match.params.badgeId);\n      this.setState({ loading: false });\n\n      this.props.history.push('/badges');\n    } catch (error) {\n      this.setState({ loading: false, error: error });\n    }\n  };\n\n  render() {\n    if (this.state.loading) {\n      return <PageLoading />;\n    }\n\n    if (this.state.error) {\n      return <PageError error={this.state.error} />;\n    }\n\n    return (\n      <BadgeDetails\n        onCloseModal={this.handleCloseModal}\n        onOpenModal={this.handleOpenModal}\n        modalIsOpen={this.state.modalIsOpen}\n        onDeleteBadge={this.handleDeleteBadge}\n        badge={this.state.data}\n      />\n    );\n  }\n}\n\nexport default BadgeDetailsContainer;"]},"metadata":{},"sourceType":"module"}